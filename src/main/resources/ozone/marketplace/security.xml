<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:sec="http://www.springframework.org/schema/security"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
                           http://www.springframework.org/schema/security
                           http://www.springframework.org/schema/security/spring-security-4.2.xsd">

    <!-- Enable annotation-driven security -->
    <sec:global-method-security jsr250-annotations="enabled"
                                pre-post-annotations="enabled"
                                proxy-target-class="true"/>

    <!-- The example DetailService implementation which reads from the preset user.properties file -->
    <bean id="userService" class="ozone.securitysample.authentication.basic.MyDetailsService">
        <property name="propertyFileName" value="/ozone/marketplace/users.properties"/>
    </bean>

    <!-- Ehcache cache manager -->
    <bean id="cacheManager" class="net.sf.ehcache.CacheManager">
        <constructor-arg index="0" type="java.net.URL" value="classpath:ozone/marketplace/ehcache.xml"/>
    </bean>

    <!-- Ehcache instance -->
    <bean id="ehcache" class="org.springframework.cache.ehcache.EhCacheFactoryBean">
        <property name="cacheManager" ref="cacheManager"/>
        <property name="cacheName" value="userCache"/>
    </bean>

    <!-- Ehcache authentication cache -->
    <bean id="userCache" class="org.springframework.security.core.userdetails.cache.EhCacheBasedUserCache">
        <property name="cache" ref="ehcache"/>
    </bean>

    <!-- Authentication provider for form login (username & password) authentication -->
    <bean id="basicAuthenticationAuthProvider"
          class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
        <property name="userDetailsService" ref="userService"/>
        <property name="userCache" ref="userCache"/>
    </bean>

    <!-- Authentication manager must be defined using 'id' and not 'ref' -->
    <sec:authentication-manager alias="authenticationManager">
        <sec:authentication-provider ref="basicAuthenticationAuthProvider"/>
    </sec:authentication-manager>

    <!-- Custom Ozone cookie filter -->
    <bean id="ozoneCookieFilter" class="ozone.security.filters.OzoneCookieFilter"/>

    <sec:http realm="OZONE">

        <sec:port-mappings>
            <sec:port-mapping http="8080" https="8444"/>
        </sec:port-mappings>

        <!-- CSRF protection must be disabled (enabled by default) to allow POST (& PATCH, PUT, DELETE) requests,
                as the client does not currently support CSRF tokens. -->
        <sec:csrf disabled="true"/>

        <!-- Set the 'X-Frame-Options' header (defaults to DENY) to allow widgets to run in iframes -->
        <sec:headers>

            <!-- Allow connection from OWF -->

            <!-- For IE - note that ALLOW-FROM only allows a single url. So if you've got multiple instances of -->
            <!-- OWF, you'll probably need to just comment-out the below line. Or just not use IE.-->
            <!-- <sec:frame-options policy="ALLOW-FROM" strategy="static" value="http://localhost:3000" /> -->

            <!-- For Chrome, FF (>58), Edge, Opera, and safari. Lets you allow as many urls as needed. -->
            <sec:header name="Content-Security-Policy" value="frame-ancestors
                http://localhost:3000/
                http://192.168.1.8:3000/
            "/>


            <!--<sec:hsts disabled="true"/>-->
        </sec:headers>

        <sec:custom-filter ref="ozoneCookieFilter" before="ANONYMOUS_FILTER"/>

        <sec:intercept-url pattern="/static/**"
                           access="permitAll()" />

        <sec:intercept-url pattern="/login*"
                           access="permitAll()"
                           requires-channel="https" />

        <sec:intercept-url pattern="/perform_login*"
                           access="permitAll()"
                           requires-channel="https" />

        <sec:intercept-url pattern="/**"
                           access="hasAnyRole('ADMIN', 'USER', 'EXTERN_ADMIN')"
                           requires-channel="https" />

        <sec:form-login login-page="/login"
                        login-processing-url="/perform_login"
                        default-target-url="/"
                        always-use-default-target="true"
                        username-parameter="username"
                        password-parameter="password" />

        <sec:logout logout-url="/logout"
                    logout-success-url="/login?out=1"
                    delete-cookies="JSESSIONID"
                    invalidate-session="true" />

        <sec:session-management invalid-session-url="/login?invalid=1">
            <sec:concurrency-control max-sessions="1" expired-url="/login?time=1" />
        </sec:session-management>

    </sec:http>

    <!-- A primary instance must be specified due to a duplicate bean registration -->
    <bean id="authenticationEventPublisher"
          primary="true"
          class="org.springframework.security.authentication.DefaultAuthenticationEventPublisher"/>

</beans>
